{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jack/Desktop/concomp/front-end/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jack/Desktop/concomp/front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport posts from '../apis/posts';\nimport history from '../history';\nimport axios from 'axios';\nimport { SIGN_IN, SIGN_OUT, CHANGE_CLASS, CREATE_POST, FETCH_POSTS, EDIT_POST, DELETE_POST } from './types';\nexport var signIn = function signIn(userId) {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport var signOut = function signOut() {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport var changeClass = function changeClass(classArray) {\n  return {\n    type: CHANGE_CLASS,\n    payload: classArray\n  };\n};\nexport var createPost = function createPost(formValues, postArray) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        var today, dd, mm, yyyy, idToBeAdded, comments, comment, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                today = new Date();\n                dd = today.getDate();\n                mm = today.getMonth() + 1; //January is 0!\n\n                yyyy = today.getFullYear();\n\n                if (dd < 10) {\n                  dd = '0' + dd;\n                }\n\n                if (mm < 10) {\n                  mm = '0' + mm;\n                }\n\n                today = mm + '/' + dd + '/' + yyyy;\n                idToBeAdded = postArray[postArray.length - 1].id + 1;\n                console.log(idToBeAdded);\n                comment = {\n                  firstName: 'Harry',\n                  lastName: 'Potter'\n                };\n                _context.next = 12;\n                return axios.post(\"http://localhost:3001/api/putData\", {\n                  id: idToBeAdded,\n                  message: formValues.message,\n                  name: formValues.name,\n                  title: formValues.title,\n                  date: today,\n                  comments: comments\n                });\n\n              case 12:\n                response = _context.sent;\n                axios.post(\"http://localhost:3001/api/addArrayElement\", {\n                  id: idToBeAdded,\n                  comment: comment\n                });\n                dispatch({\n                  type: CREATE_POST,\n                  payload: response.data\n                });\n                history.push('/blog');\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchPosts = function fetchPosts() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                fetch(\"http://localhost:3001/api/getData\").then(function (data) {\n                  return data.json();\n                }).then(function (res) {\n                  return dispatch({\n                    type: FETCH_POSTS,\n                    payload: res.data\n                  });\n                });\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var editPost = function editPost(idToUpdate, formValues, postArray) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var objIdToUpdate, response;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                objIdToUpdate = null;\n                postArray.forEach(function (dat) {\n                  if (dat.id == idToUpdate) {\n                    objIdToUpdate = dat._id;\n                  }\n                });\n                console.log(objIdToUpdate);\n                _context3.next = 5;\n                return axios.post(\"http://localhost:3001/api/updateData\", {\n                  id: objIdToUpdate,\n                  update: {\n                    message: formValues.message,\n                    name: formValues.name,\n                    title: formValues.title\n                  }\n                });\n\n              case 5:\n                response = _context3.sent;\n                dispatch({\n                  type: EDIT_POST,\n                  payload: response.data\n                });\n                history.push('/blog');\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x4) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var deletePost = function deletePost(idTodelete, postArray) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        var objIdToDelete;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                objIdToDelete = null;\n                postArray.forEach(function (dat) {\n                  if (dat.id == idTodelete) {\n                    objIdToDelete = dat._id;\n                  }\n                });\n                _context4.next = 4;\n                return axios.delete(\"http://localhost:3001/api/deleteData\", {\n                  data: {\n                    id: objIdToDelete\n                  }\n                });\n\n              case 4:\n                dispatch({\n                  type: DELETE_POST,\n                  payload: idTodelete\n                });\n                history.push('/blog');\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function (_x5) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/jack/Desktop/concomp/front-end/src/actions/index.js"],"names":["posts","history","axios","SIGN_IN","SIGN_OUT","CHANGE_CLASS","CREATE_POST","FETCH_POSTS","EDIT_POST","DELETE_POST","signIn","userId","type","payload","signOut","changeClass","classArray","createPost","formValues","postArray","dispatch","getState","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","idToBeAdded","length","id","console","log","comment","firstName","lastName","post","message","name","title","date","comments","response","data","push","fetchPosts","fetch","then","json","res","editPost","idToUpdate","objIdToUpdate","forEach","dat","_id","update","deletePost","idTodelete","objIdToDelete","delete"],"mappings":"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","sourcesContent":["import posts from '../apis/posts';\nimport history from '../history';\nimport axios from 'axios';\n\nimport { SIGN_IN, SIGN_OUT, CHANGE_CLASS, CREATE_POST, FETCH_POSTS, EDIT_POST, DELETE_POST } from './types';\n\nexport const signIn = (userId) =>{\n  return{\n    type: SIGN_IN,\n    payload: userId\n  };\n};\n\nexport const signOut = () => {\n  return{\n    type: SIGN_OUT\n  };\n};\n\nexport const changeClass = (classArray) => {\n  return{\n    type: CHANGE_CLASS,\n    payload: classArray\n  };\n};\n\nexport const createPost = (formValues, postArray) => async (dispatch, getState) => {\n      var today = new Date();\n      var dd = today.getDate();\n      var mm = today.getMonth() + 1; //January is 0!\n      var yyyy = today.getFullYear();\n      if (dd < 10) {\n        dd = '0' + dd;\n      }\n      if (mm < 10) {\n        mm = '0' + mm;\n      }\n      today = mm + '/' + dd + '/' + yyyy;\n\n      let idToBeAdded = postArray[postArray.length-1].id + 1;\n\n      console.log(idToBeAdded);\n      var comments: []\n\n      var comment = { firstName: 'Harry', lastName: 'Potter' };\n\n      const response = await axios.post(\"http://localhost:3001/api/putData\", {\n        id: idToBeAdded,\n        message: formValues.message,\n        name: formValues.name,\n        title: formValues.title,\n        date: today,\n        comments: comments\n      });\n\n      axios.post(\"http://localhost:3001/api/addArrayElement\",{\n        id: idToBeAdded,\n        comment: comment\n      })\n\n\n\n      dispatch({type: CREATE_POST, payload: response.data});\n      history.push('/blog');\n};\n\nexport const fetchPosts = () => async dispatch => {\n\n  fetch(\"http://localhost:3001/api/getData\")\n      .then(data => data.json())\n      .then(res => dispatch({type: FETCH_POSTS, payload: res.data}));\n\n}\n\n\nexport const editPost = (idToUpdate, formValues, postArray) => async dispatch => {\n\n    let objIdToUpdate = null;\n    postArray.forEach(dat => {\n      if (dat.id == idToUpdate) {\n        objIdToUpdate = dat._id;\n      }\n    });\n    console.log(objIdToUpdate)\n    const response = await axios.post(\"http://localhost:3001/api/updateData\", {\n      id: objIdToUpdate,\n      update: {\n        message: formValues.message,\n        name: formValues.name,\n        title: formValues.title,\n      }\n    });\n\n    dispatch({type: EDIT_POST, payload: response.data});\n    history.push('/blog');\n}\n\nexport const deletePost = (idTodelete, postArray) => async dispatch => {\n\n    let objIdToDelete = null;\n    postArray.forEach(dat => {\n      if (dat.id == idTodelete) {\n        objIdToDelete = dat._id;\n      }\n    });\n\n\n    await axios.delete(\"http://localhost:3001/api/deleteData\", {\n      data: {\n        id: objIdToDelete\n      }\n    });\n\n    dispatch({type: DELETE_POST, payload: idTodelete});\n    history.push('/blog');\n}\n"]},"metadata":{},"sourceType":"module"}
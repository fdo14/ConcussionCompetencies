{"ast":null,"code":"import _defineProperty from \"/Users/jack/Desktop/concomp/front-end/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/jack/Desktop/concomp/front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jack/Desktop/concomp/front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jack/Desktop/concomp/front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jack/Desktop/concomp/front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jack/Desktop/concomp/front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jack/Desktop/concomp/front-end/src/components/Blog/Comment/CommentsList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createComment, fetchComments, deleteComment } from '../../../actions';\nimport { Link } from 'react-router-dom';\n\nvar CommentsList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CommentsList, _React$Component);\n\n  function CommentsList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CommentsList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CommentsList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      comment: ''\n    };\n\n    _this.onCommentChange = function (event) {\n      _this.setState({\n        comment: event.target.value\n      });\n    };\n\n    _this.onButtonClick = function () {\n      _this.props.createComment(_this.props.id, _this.state.comment, _this.props.comments, _this.props.currentUserId);\n\n      _this.setState({\n        comment: ''\n      });\n\n      _this.renderList();\n    };\n\n    _this.onDeleteClick = function (id, title) {\n      _this.props.deleteComment(_this.props.id, _this.props.comments, title, id);\n    };\n\n    return _this;\n  }\n\n  _createClass(CommentsList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchComments();\n    }\n  }, {\n    key: \"renderAdmin\",\n    value: function renderAdmin(id, title) {\n      if ((this.props.currentUserId == 115089269998867004817 || this.props.currentUserId == id) && this.props.isSignedIn) {\n        var _React$createElement;\n\n        return React.createElement(\"div\", {\n          class: \"actions\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(Link, (_React$createElement = {\n          className: \"delete\",\n          to: {\n            pathname: 'blog/comment/delete',\n            state: {\n              id: id,\n              title: title\n            }\n          }\n        }, _defineProperty(_React$createElement, \"className\", \"ui button primary\"), _defineProperty(_React$createElement, \"__source\", {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement), \"Delete\"));\n      }\n    }\n  }, {\n    key: \"renderForm\",\n    value: function renderForm() {\n      if (this.props.currentUserId) {\n        return React.createElement(\"div\", {\n          class: \"ui form\",\n          style: {\n            marginTop: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"field\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(\"textarea\", {\n          rows: \"2\",\n          placeholder: \"Share your thoughts.\",\n          value: this.state.comment,\n          onChange: this.onCommentChange,\n          style: {\n            borderBottom: \"none\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"buttonDiv\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"mini ui button primary\",\n          style: {\n            margin: 0\n          },\n          onClick: this.onButtonClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \"Submit\"))));\n      }\n    }\n  }, {\n    key: \"renderList\",\n    value: function renderList() {\n      var _this2 = this;\n\n      var currentId = this.props.id;\n      var postToRead = this.props.comments.filter(function (posts) {\n        return posts.id == currentId;\n      });\n\n      if (postToRead[0]) {\n        return postToRead[0].comments.slice(0).reverse().map(function (post) {\n          return React.createElement(\"div\", {\n            class: \"comment\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            class: \"avatar\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: \"/images/avatar/small/matt.jpg\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            class: \"content\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            class: \"metadata\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            class: \"date\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, post.date)), React.createElement(\"div\", {\n            class: \"text\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, post.comment), _this2.renderAdmin(post.googleId, post.comment)));\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"ui list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, this.renderForm(), this.renderList());\n    }\n  }]);\n\n  return CommentsList;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    comments: Object.values(state.comments),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchComments: fetchComments,\n  createComment: createComment,\n  deleteComment: deleteComment\n})(CommentsList);","map":{"version":3,"sources":["/Users/jack/Desktop/concomp/front-end/src/components/Blog/Comment/CommentsList.js"],"names":["React","connect","createComment","fetchComments","deleteComment","Link","CommentsList","state","comment","onCommentChange","event","setState","target","value","onButtonClick","props","id","comments","currentUserId","renderList","onDeleteClick","title","isSignedIn","pathname","marginTop","borderBottom","margin","currentId","postToRead","filter","posts","slice","reverse","map","post","date","renderAdmin","googleId","renderForm","Component","mapStateToProps","Object","values","auth","userId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { createComment, fetchComments, deleteComment } from '../../../actions';\nimport { Link } from 'react-router-dom';\n\nclass CommentsList extends React.Component{\n  componentDidMount(){\n    this.props.fetchComments();\n  }\n\n  state = { comment: ''};\n\n  onCommentChange = event => {\n    this.setState({comment: event.target.value});\n  }\n\n  onButtonClick = () =>{\n    this.props.createComment(this.props.id, this.state.comment, this.props.comments, this.props.currentUserId);\n    this.setState({ comment: ''});\n    this.renderList();\n  }\n\n  onDeleteClick = (id, title) => {\n    this.props.deleteComment(this.props.id, this.props.comments, title, id);\n  }\n\n  renderAdmin(id, title){\n    if((this.props.currentUserId == 115089269998867004817 || this.props.currentUserId == id)&&this.props.isSignedIn){\n      return (\n        <div class=\"actions\">\n        <Link className=\"delete\" to={{ pathname: 'blog/comment/delete', state: { id: id, title: title}}} className=\"ui button primary\" >Delete</Link>\n        </div>\n      );\n    }\n  }\n\n  renderForm(){\n    if(this.props.currentUserId){\n      return(\n          <div class=\"ui form\" style={{marginTop: 0}}>\n            <div class=\"field\">\n              <textarea rows=\"2\"\n                placeholder=\"Share your thoughts.\"\n                value={this.state.comment}\n                onChange={this.onCommentChange}\n                style={{borderBottom: \"none\"}}\n              />\n              <div className=\"buttonDiv\">\n                <button className=\"mini ui button primary\" style={{margin: 0}} onClick={this.onButtonClick}>\n                  Submit\n                </button>\n              </div>\n            </div>\n          </div>\n        );\n      }\n  }\n\n  renderList(){\n    const currentId = this.props.id;\n    var postToRead =  this.props.comments.filter(function(posts) {\n\t     return posts.id == currentId;\n    });\n    if(postToRead[0]){\n      return postToRead[0].comments.slice(0).reverse().map(post => {\n        return(\n\n          <div class=\"comment\">\n            <a class=\"avatar\">\n              <img src=\"/images/avatar/small/matt.jpg\" />\n            </a>\n            <div class=\"content\">\n              <div class=\"metadata\">\n                <span class=\"date\">{post.date}</span>\n              </div>\n              <div class=\"text\">\n                {post.comment}\n              </div>\n              {this.renderAdmin(post.googleId, post.comment)}\n            </div>\n          </div>\n\n        )\n      });\n    }\n  }\n\n  render(){\n    return(\n      <div className=\"ui list\">\n        {this.renderForm()}\n        {this.renderList()}\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return{\n    comments: Object.values(state.comments),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  }\n}\nexport default connect(mapStateToProps, { fetchComments, createComment, deleteComment})(CommentsList);\n"]},"metadata":{},"sourceType":"module"}
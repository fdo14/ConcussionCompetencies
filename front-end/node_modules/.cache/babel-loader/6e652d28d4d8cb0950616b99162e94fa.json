{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jack/Desktop/concomp/front-end/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jack/Desktop/concomp/front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport posts from '../apis/posts';\nimport history from '../history';\nimport axios from 'axios';\nimport { SIGN_IN, SIGN_OUT, CHANGE_CLASS, CREATE_POST, FETCH_POSTS, EDIT_POST, DELETE_POST, CREATE_COMMENT, FETCH_COMMENTS, SET_BLOG, DELETE_COMMENT } from './types';\nexport var signIn = function signIn(userId) {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport var signOut = function signOut() {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport var setBlog = function setBlog(blogId) {\n  return {\n    type: SET_BLOG,\n    payload: blogId\n  };\n};\nexport var changeClass = function changeClass(classArray) {\n  return {\n    type: CHANGE_CLASS,\n    payload: classArray\n  };\n};\nexport var createPost = function createPost(formValues, postArray) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        var today, dd, mm, yyyy, idToBeAdded, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                today = new Date();\n                dd = today.getDate();\n                mm = today.getMonth() + 1; //January is 0!\n\n                yyyy = today.getFullYear();\n\n                if (dd < 10) {\n                  dd = '0' + dd;\n                }\n\n                if (mm < 10) {\n                  mm = '0' + mm;\n                }\n\n                today = mm + '/' + dd + '/' + yyyy;\n                idToBeAdded = postArray[postArray.length - 1].id + 1;\n                _context.next = 10;\n                return axios.post(\"http://localhost:3001/api/putData\", {\n                  id: idToBeAdded,\n                  message: formValues.message,\n                  name: formValues.name,\n                  title: formValues.title,\n                  date: today\n                });\n\n              case 10:\n                response = _context.sent;\n                _context.next = 13;\n                return axios.post(\"http://localhost:3001/api/putComment\", {\n                  id: idToBeAdded\n                });\n\n              case 13:\n                dispatch({\n                  type: CREATE_POST,\n                  payload: response.data\n                });\n                history.push('/blog');\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchPosts = function fetchPosts() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                fetch(\"http://localhost:3001/api/getData\").then(function (data) {\n                  return data.json();\n                }).then(function (res) {\n                  return dispatch({\n                    type: FETCH_POSTS,\n                    payload: res.data\n                  });\n                });\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchComments = function fetchComments() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                fetch(\"http://localhost:3001/api/getComments\").then(function (data) {\n                  return data.json();\n                }).then(function (res) {\n                  return dispatch({\n                    type: FETCH_COMMENTS,\n                    payload: res.data\n                  });\n                });\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x4) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var editPost = function editPost(idToUpdate, formValues, postArray) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        var objIdToUpdate, response;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                objIdToUpdate = null;\n                postArray.forEach(function (dat) {\n                  if (dat.id == idToUpdate) {\n                    objIdToUpdate = dat._id;\n                  }\n                });\n                _context4.next = 4;\n                return axios.post(\"http://localhost:3001/api/updateData\", {\n                  id: objIdToUpdate,\n                  update: {\n                    message: formValues.message,\n                    name: formValues.name,\n                    title: formValues.title\n                  }\n                });\n\n              case 4:\n                response = _context4.sent;\n                dispatch({\n                  type: EDIT_POST,\n                  payload: response.data\n                });\n                history.push('/blog');\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function (_x5) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var deletePost = function deletePost(idTodelete, postArray) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatch) {\n        var objIdToDelete;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                objIdToDelete = null;\n                postArray.forEach(function (dat) {\n                  if (dat.id == idTodelete) {\n                    objIdToDelete = dat._id;\n                  }\n                });\n                _context5.next = 4;\n                return axios.delete(\"http://localhost:3001/api/deleteData\", {\n                  data: {\n                    id: objIdToDelete\n                  }\n                });\n\n              case 4:\n                dispatch({\n                  type: DELETE_POST,\n                  payload: idTodelete\n                });\n                history.push('/blog');\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      return function (_x6) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var deleteComment = function deleteComment(idTodelete, commentArray, title, userId) {\n  return function (dispatch) {\n    var objIdToDelete = null;\n    commentArray.forEach(function (dat) {\n      if (dat.id == idTodelete) {\n        objIdToDelete = dat._id;\n      }\n    });\n    axios.delete(\"http://localhost:3001/api/deleteComment\", {\n      data: {\n        id: objIdToDelete,\n        title: title,\n        userId: userId\n      }\n    });\n    dispatch({\n      type: DELETE_COMMENT,\n      payload: idTodelete\n    });\n    history.push('/blog');\n  };\n};\nexport var createComment = function createComment(userId, comment, postArray, googleId) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(dispatch) {\n        var today, dd, mm, yyyy, objIdToDelete, commentObj, response;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                today = new Date();\n                dd = today.getDate();\n                mm = today.getMonth() + 1; //January is 0!\n\n                yyyy = today.getFullYear();\n\n                if (dd < 10) {\n                  dd = '0' + dd;\n                }\n\n                if (mm < 10) {\n                  mm = '0' + mm;\n                }\n\n                today = mm + '/' + dd + '/' + yyyy;\n                objIdToDelete = null;\n                postArray.forEach(function (dat) {\n                  if (dat.id == userId) {\n                    objIdToDelete = dat._id;\n                  }\n                });\n                commentObj = {\n                  comment: comment,\n                  date: today,\n                  googleId: googleId\n                };\n                _context6.next = 12;\n                return axios.post(\"http://localhost:3001/api/addArrayElement\", {\n                  id: objIdToDelete,\n                  comment: commentObj\n                });\n\n              case 12:\n                response = _context6.sent;\n                dispatch({\n                  type: CREATE_COMMENT,\n                  payload: response.data\n                });\n\n              case 14:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      return function (_x7) {\n        return _ref6.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/jack/Desktop/concomp/front-end/src/actions/index.js"],"names":["posts","history","axios","SIGN_IN","SIGN_OUT","CHANGE_CLASS","CREATE_POST","FETCH_POSTS","EDIT_POST","DELETE_POST","CREATE_COMMENT","FETCH_COMMENTS","SET_BLOG","DELETE_COMMENT","signIn","userId","type","payload","signOut","setBlog","blogId","changeClass","classArray","createPost","formValues","postArray","dispatch","getState","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","idToBeAdded","length","id","post","message","name","title","date","response","data","push","fetchPosts","fetch","then","json","res","fetchComments","editPost","idToUpdate","objIdToUpdate","forEach","dat","_id","update","deletePost","idTodelete","objIdToDelete","delete","deleteComment","commentArray","createComment","comment","googleId","commentObj"],"mappings":"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","sourcesContent":["import posts from '../apis/posts';\nimport history from '../history';\nimport axios from 'axios';\n\nimport { SIGN_IN, SIGN_OUT, CHANGE_CLASS, CREATE_POST,\n        FETCH_POSTS, EDIT_POST, DELETE_POST, CREATE_COMMENT, FETCH_COMMENTS,\n        SET_BLOG, DELETE_COMMENT} from './types';\n\nexport const signIn = (userId) =>{\n  return{\n    type: SIGN_IN,\n    payload: userId\n  };\n};\n\nexport const signOut = () => {\n  return{\n    type: SIGN_OUT\n  };\n};\n\nexport const setBlog = (blogId) => {\n  return{\n    type: SET_BLOG,\n    payload: blogId\n  };\n}\n\n\nexport const changeClass = (classArray) => {\n  return{\n    type: CHANGE_CLASS,\n    payload: classArray\n  };\n};\n\nexport const createPost = (formValues, postArray) => async (dispatch, getState) => {\n      var today = new Date();\n      var dd = today.getDate();\n      var mm = today.getMonth() + 1; //January is 0!\n      var yyyy = today.getFullYear();\n      if (dd < 10) {\n        dd = '0' + dd;\n      }\n      if (mm < 10) {\n        mm = '0' + mm;\n      }\n      today = mm + '/' + dd + '/' + yyyy;\n\n      let idToBeAdded = postArray[postArray.length-1].id + 1;\n\n      const response = await axios.post(\"http://localhost:3001/api/putData\", {\n        id: idToBeAdded,\n        message: formValues.message,\n        name: formValues.name,\n        title: formValues.title,\n        date: today\n      });\n\n      await axios.post(\"http://localhost:3001/api/putComment\", {\n        id: idToBeAdded\n      });\n\n      dispatch({type: CREATE_POST, payload: response.data});\n      history.push('/blog');\n};\n\nexport const fetchPosts = () => async dispatch => {\n  fetch(\"http://localhost:3001/api/getData\")\n      .then(data => data.json())\n      .then(res => dispatch({type: FETCH_POSTS, payload: res.data}));\n}\n\nexport const fetchComments = () => async dispatch => {\n  fetch(\"http://localhost:3001/api/getComments\")\n      .then(data => data.json())\n      .then(res => dispatch({type: FETCH_COMMENTS, payload: res.data}));\n}\n\n\nexport const editPost = (idToUpdate, formValues, postArray) => async dispatch => {\n\n    let objIdToUpdate = null;\n    postArray.forEach(dat => {\n      if (dat.id == idToUpdate) {\n        objIdToUpdate = dat._id;\n      }\n    });\n\n    const response = await axios.post(\"http://localhost:3001/api/updateData\", {\n      id: objIdToUpdate,\n      update: {\n        message: formValues.message,\n        name: formValues.name,\n        title: formValues.title,\n      }\n    });\n\n    dispatch({type: EDIT_POST, payload: response.data});\n    history.push('/blog');\n}\n\nexport const deletePost = (idTodelete, postArray) => async dispatch => {\n\n    let objIdToDelete = null;\n    postArray.forEach(dat => {\n      if (dat.id == idTodelete) {\n        objIdToDelete = dat._id;\n      }\n    });\n\n\n    await axios.delete(\"http://localhost:3001/api/deleteData\", {\n      data: {\n        id: objIdToDelete\n      }\n    });\n\n    dispatch({type: DELETE_POST, payload: idTodelete});\n    history.push('/blog');\n}\n\nexport const deleteComment = (idTodelete, commentArray, title, userId) => dispatch => {\n  let objIdToDelete = null;\n  commentArray.forEach(dat => {\n    if (dat.id == idTodelete) {\n      objIdToDelete = dat._id;\n    }\n  });\n\n  axios.delete(\"http://localhost:3001/api/deleteComment\", {\n    data: {\n      id: objIdToDelete,\n      title: title,\n      userId: userId\n    }\n  });\n\n  dispatch({type: DELETE_COMMENT, payload: idTodelete});\n  history.push('/blog');\n\n}\n\nexport const createComment = (userId, comment, postArray, googleId) => async dispatch => {\n  var today = new Date();\n  var dd = today.getDate();\n  var mm = today.getMonth() + 1; //January is 0!\n  var yyyy = today.getFullYear();\n  if (dd < 10) {\n    dd = '0' + dd;\n  }\n  if (mm < 10) {\n    mm = '0' + mm;\n  }\n  today = mm + '/' + dd + '/' + yyyy;\n\n  let objIdToDelete = null;\n  postArray.forEach(dat => {\n    if (dat.id == userId) {\n      objIdToDelete = dat._id;\n    }\n  });\n\n  const commentObj ={\n    comment: comment,\n    date: today,\n    googleId: googleId\n  }\n\n  const response = await axios.post(\"http://localhost:3001/api/addArrayElement\",{\n    id: objIdToDelete,\n    comment: commentObj,\n  });\n\n  dispatch({type: CREATE_COMMENT, payload: response.data});\n}\n"]},"metadata":{},"sourceType":"module"}
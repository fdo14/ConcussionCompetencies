{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jack/Desktop/concomp/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/jack/Desktop/concomp/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/jack/Desktop/concomp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport posts from '../apis/posts';\nimport { SIGN_IN, SIGN_OUT, CHANGE_CLASS, CREATE_POST } from './types';\nexport var signIn = function signIn(userId) {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport var signOut = function signOut() {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport var changeClass = function changeClass(classArray) {\n  return {\n    type: CHANGE_CLASS,\n    payload: classArray\n  };\n};\nexport var createStream = function createStream(formValues) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        var userId, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                userId = getState().auth.userId;\n                _context.next = 3;\n                return streams.post('/streams', _objectSpread({}, formValues, {\n                  userId: userId\n                }));\n\n              case 3:\n                response = _context.sent;\n                dispatch({\n                  type: CREATE_STREAM,\n                  payload: response.data\n                });\n                history.push('/blog');\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/jack/Desktop/concomp/src/actions/index.js"],"names":["posts","SIGN_IN","SIGN_OUT","CHANGE_CLASS","CREATE_POST","signIn","userId","type","payload","signOut","changeClass","classArray","createStream","formValues","dispatch","getState","auth","streams","post","response","CREATE_STREAM","data","history","push"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,eAAlB;AAEA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,YAA5B,EAA0CC,WAA1C,QAA6D,SAA7D;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,MAAD,EAAW;AAC/B,SAAM;AACJC,IAAAA,IAAI,EAAEN,OADF;AAEJO,IAAAA,OAAO,EAAEF;AAFL,GAAN;AAID,CALM;AAOP,OAAO,IAAMG,OAAO,GAAG,SAAVA,OAAU,GAAM;AAC3B,SAAM;AACJF,IAAAA,IAAI,EAAEL;AADF,GAAN;AAGD,CAJM;AAMP,OAAO,IAAMQ,WAAW,GAAG,SAAdA,WAAc,CAACC,UAAD,EAAgB;AACzC,SAAM;AACJJ,IAAAA,IAAI,EAAEJ,YADF;AAEJK,IAAAA,OAAO,EAAEG;AAFL,GAAN;AAID,CALM;AAOP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAI,iBAAOC,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC9BT,gBAAAA,MAD8B,GACnBS,QAAQ,GAAGC,IADQ,CAC9BV,MAD8B;AAAA;AAAA,uBAEdW,OAAO,CAACC,IAAR,CAAa,UAAb,oBAA6BL,UAA7B;AAAyCP,kBAAAA,MAAM,EAANA;AAAzC,mBAFc;;AAAA;AAE/Ba,gBAAAA,QAF+B;AAIrCL,gBAAAA,QAAQ,CAAC;AAACP,kBAAAA,IAAI,EAAEa,aAAP;AAAsBZ,kBAAAA,OAAO,EAAEW,QAAQ,CAACE;AAAxC,iBAAD,CAAR;AACAC,gBAAAA,OAAO,CAACC,IAAR,CAAa,OAAb;;AALqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA/B","sourcesContent":["import posts from '../apis/posts';\n\nimport { SIGN_IN, SIGN_OUT, CHANGE_CLASS, CREATE_POST } from './types';\n\nexport const signIn = (userId) =>{\n  return{\n    type: SIGN_IN,\n    payload: userId\n  };\n};\n\nexport const signOut = () => {\n  return{\n    type: SIGN_OUT\n  };\n};\n\nexport const changeClass = (classArray) => {\n  return{\n    type: CHANGE_CLASS,\n    payload: classArray\n  };\n};\n\nexport const createStream = formValues => async (dispatch, getState) => {\n    const { userId } = getState().auth;\n     const response = await streams.post('/streams', {...formValues, userId});\n\n     dispatch({type: CREATE_STREAM, payload: response.data});\n     history.push('/blog');\n};\n"]},"metadata":{},"sourceType":"module"}
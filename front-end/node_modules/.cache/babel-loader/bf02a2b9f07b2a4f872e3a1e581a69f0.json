{"ast":null,"code":"import _classCallCheck from \"/Users/jack/Desktop/concomp/front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jack/Desktop/concomp/front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jack/Desktop/concomp/front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jack/Desktop/concomp/front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jack/Desktop/concomp/front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jack/Desktop/concomp/front-end/src/components/Blog/Comment/CommentsList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createComment, fetchComments } from '../../../actions';\n\nvar CommentsList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CommentsList, _React$Component);\n\n  function CommentsList() {\n    _classCallCheck(this, CommentsList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CommentsList).apply(this, arguments));\n  }\n\n  _createClass(CommentsList, [{\n    key: \"renderList\",\n    value: function renderList() {\n      var currentId = this.props.id;\n      var postToRead = this.props.comments.filter(function (posts) {\n        return posts.id == currentId;\n      });\n      console.log(postToRead);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.renderList();\n      return React.createElement(\"div\", {\n        class: \"comment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        class: \"avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"/images/avatar/small/matt.jpg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        class: \"author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Matt\"), React.createElement(\"div\", {\n        class: \"metadata\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        class: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Today at 5:42PM\")), React.createElement(\"div\", {\n        class: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"How artistic!\"), React.createElement(\"div\", {\n        class: \"actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        class: \"reply\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Reply\"))));\n    }\n  }]);\n\n  return CommentsList;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    comments: Object.values(state.comments),\n    currentUserId: state.auth.userId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchComments: fetchComments\n})(CommentsList);","map":{"version":3,"sources":["/Users/jack/Desktop/concomp/front-end/src/components/Blog/Comment/CommentsList.js"],"names":["React","connect","createComment","fetchComments","CommentsList","currentId","props","id","postToRead","comments","filter","posts","console","log","renderList","Component","mapStateToProps","state","Object","values","currentUserId","auth","userId"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,kBAA7C;;IAEMC,Y;;;;;;;;;;;;;iCACQ;AACV,UAAMC,SAAS,GAAG,KAAKC,KAAL,CAAWC,EAA7B;AACA,UAAIC,UAAU,GAAI,KAAKF,KAAL,CAAWG,QAAX,CAAoBC,MAApB,CAA2B,UAASC,KAAT,EAAgB;AAC3D,eAAOA,KAAK,CAACJ,EAAN,IAAYF,SAAnB;AACD,OAFiB,CAAlB;AAGAO,MAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AACD;;;6BAEO;AACN,WAAKM,UAAL;AACA,aACE;AAAK,QAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,KAAK,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAC,+BAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAK,QAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,KAAK,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAK,QAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,KAAK,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CAFF,EAKE;AAAK,QAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBALF,EAQE;AAAK,QAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,KAAK,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CARF,CAJF,CADF;AAmBD;;;;EA9BwBd,KAAK,CAACe,S;;AAkCjC,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAM;AACJR,IAAAA,QAAQ,EAAES,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACR,QAApB,CADN;AAEJW,IAAAA,aAAa,EAAEH,KAAK,CAACI,IAAN,CAAWC;AAFtB,GAAN;AAID,CALD;;AAMA,eAAerB,OAAO,CAACe,eAAD,EAAkB;AAAEb,EAAAA,aAAa,EAAbA;AAAF,CAAlB,CAAP,CAA2CC,YAA3C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { createComment, fetchComments } from '../../../actions';\n\nclass CommentsList extends React.Component{\n  renderList(){\n    const currentId = this.props.id;\n    var postToRead =  this.props.comments.filter(function(posts) {\n\t     return posts.id == currentId;\n    });\n    console.log(postToRead)\n  }\n\n  render(){\n    this.renderList();\n    return(\n      <div class=\"comment\">\n        <a class=\"avatar\">\n          <img src=\"/images/avatar/small/matt.jpg\" />\n        </a>\n        <div class=\"content\">\n          <a class=\"author\">Matt</a>\n          <div class=\"metadata\">\n            <span class=\"date\">Today at 5:42PM</span>\n          </div>\n          <div class=\"text\">\n            How artistic!\n          </div>\n          <div class=\"actions\">\n            <a class=\"reply\">Reply</a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return{\n    comments: Object.values(state.comments),\n    currentUserId: state.auth.userId\n  }\n}\nexport default connect(mapStateToProps, { fetchComments})(CommentsList);\n"]},"metadata":{},"sourceType":"module"}
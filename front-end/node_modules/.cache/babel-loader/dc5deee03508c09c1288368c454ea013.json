{"ast":null,"code":"import _classCallCheck from \"/Users/jack/Desktop/concomp/front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jack/Desktop/concomp/front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jack/Desktop/concomp/front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jack/Desktop/concomp/front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jack/Desktop/concomp/front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jack/Desktop/concomp/front-end/src/components/Blog/Comment/CommentsList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createComment, fetchComments } from '../../../actions';\n\nvar CommentsList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CommentsList, _React$Component);\n\n  function CommentsList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CommentsList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CommentsList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      comment: ''\n    };\n\n    _this.onCommentChange = function (event) {\n      _this.setState({\n        comment: event.target.value\n      });\n    };\n\n    _this.onButtonClick = function () {\n      _this.props.createComment(_this.props.id, _this.state.comment, _this.props.comments, _this.props.currentUserId);\n\n      _this.setState({\n        comment: ''\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CommentsList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchComments();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchComments();\n    }\n  }, {\n    key: \"renderForm\",\n    value: function renderForm() {\n      return React.createElement(\"div\", {\n        class: \"ui form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        rows: \"2\",\n        placeholder: \"Share your thoughts.\",\n        value: this.state.comment,\n        onChange: this.onCommentChange,\n        style: {\n          borderBottom: \"none\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"buttonDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"mini ui button primary\",\n        style: {\n          margin: 0\n        },\n        onClick: this.onButtonClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n  }, {\n    key: \"renderList\",\n    value: function renderList() {\n      var currentId = this.props.id;\n      var postToRead = this.props.comments.filter(function (posts) {\n        return posts.id == currentId;\n      });\n\n      if (postToRead[0]) {\n        return postToRead[0].comments.slice(0).reverse().map(function (post) {\n          return React.createElement(\"div\", {\n            class: \"comment\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            class: \"avatar\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: \"/images/avatar/small/matt.jpg\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            class: \"content\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            class: \"metadata\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            class: \"date\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, post.date)), React.createElement(\"div\", {\n            class: \"text\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }, post.comment)));\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.currentUserId);\n      return React.createElement(\"div\", {\n        className: \"ui list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, this.renderForm(), this.renderList());\n    }\n  }]);\n\n  return CommentsList;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    comments: Object.values(state.comments),\n    currentUserId: state.auth.userId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchComments: fetchComments,\n  createComment: createComment\n})(CommentsList);","map":{"version":3,"sources":["/Users/jack/Desktop/concomp/front-end/src/components/Blog/Comment/CommentsList.js"],"names":["React","connect","createComment","fetchComments","CommentsList","state","comment","onCommentChange","event","setState","target","value","onButtonClick","props","id","comments","currentUserId","borderBottom","margin","currentId","postToRead","filter","posts","slice","reverse","map","post","date","console","log","renderForm","renderList","Component","mapStateToProps","Object","values","auth","userId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { createComment, fetchComments } from '../../../actions';\n\nclass CommentsList extends React.Component{\n  componentDidMount(){\n    this.props.fetchComments();\n  }\n\n  state = { comment: ''};\n\n  componentDidMount(){\n    this.props.fetchComments();\n  }\n\n  onCommentChange = event => {\n    this.setState({comment: event.target.value});\n  }\n\n  onButtonClick = () =>{\n    this.props.createComment(this.props.id, this.state.comment, this.props.comments, this.props.currentUserId);\n    this.setState({ comment: ''});\n  }\n\n  renderForm(){\n    return(\n        <div class=\"ui form\">\n          <div class=\"field\">\n            <textarea rows=\"2\"\n              placeholder=\"Share your thoughts.\"\n              value={this.state.comment}\n              onChange={this.onCommentChange}\n              style={{borderBottom: \"none\"}}\n            />\n            <div className=\"buttonDiv\">\n              <button className=\"mini ui button primary\" style={{margin: 0}} onClick={this.onButtonClick}>\n                Submit\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n  }\n\n  renderList(){\n    const currentId = this.props.id;\n    var postToRead =  this.props.comments.filter(function(posts) {\n\t     return posts.id == currentId;\n    });\n    if(postToRead[0]){\n      return postToRead[0].comments.slice(0).reverse().map(post => {\n        return(\n          <div class=\"comment\">\n            <a class=\"avatar\">\n              <img src=\"/images/avatar/small/matt.jpg\" />\n            </a>\n            <div class=\"content\">\n              <div class=\"metadata\">\n                <span class=\"date\">{post.date}</span>\n              </div>\n              <div class=\"text\">\n                {post.comment}\n              </div>\n            </div>\n          </div>\n        )\n      });\n    }\n  }\n\n  render(){\n    console.log(this.props.currentUserId);\n    return(\n      <div className=\"ui list\">\n        {this.renderForm()}\n        {this.renderList()}\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return{\n    comments: Object.values(state.comments),\n    currentUserId: state.auth.userId\n  }\n}\nexport default connect(mapStateToProps, { fetchComments, createComment})(CommentsList);\n"]},"metadata":{},"sourceType":"module"}
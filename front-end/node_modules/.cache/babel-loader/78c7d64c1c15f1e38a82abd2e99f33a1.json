{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jack/Desktop/concomp/front-end/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jack/Desktop/concomp/front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport posts from '../apis/posts';\nimport history from '../history';\nimport axios from 'axios';\nimport { SIGN_IN, SIGN_OUT, CHANGE_CLASS, CREATE_POST, FETCH_POSTS, EDIT_POST, DELETE_POST } from './types';\nexport var signIn = function signIn(userId) {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport var signOut = function signOut() {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport var changeClass = function changeClass(classArray) {\n  return {\n    type: CHANGE_CLASS,\n    payload: classArray\n  };\n};\nexport var createPost = function createPost(formValues) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        var today, dd, mm, yyyy, comments, message, idToBeAdded, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                today = new Date();\n                dd = today.getDate();\n                mm = today.getMonth() + 1; //January is 0!\n\n                yyyy = today.getFullYear();\n\n                if (dd < 10) {\n                  dd = '0' + dd;\n                }\n\n                if (mm < 10) {\n                  mm = '0' + mm;\n                }\n\n                today = mm + '/' + dd + '/' + yyyy;\n                comments = [];\n                message = \"hello\";\n                idToBeAdded = 0;\n                _context.next = 12;\n                return axios.post(\"http://localhost:3001/api/putData\", {\n                  id: idToBeAdded,\n                  message: message\n                });\n\n              case 12:\n                response = _context.sent;\n                dispatch({\n                  type: CREATE_POST,\n                  payload: response.data\n                });\n                history.push('/blog');\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchPosts = function fetchPosts() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                fetch(\"http://localhost:3001/api/getData\").then(function (data) {\n                  return data.json();\n                }).then(function (res) {\n                  return dispatch({\n                    type: FETCH_POSTS,\n                    payload: res.data\n                  });\n                });\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var editPost = function editPost(id, formValues) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return posts.patch(\"/posts/\".concat(id), formValues);\n\n              case 2:\n                response = _context3.sent;\n                dispatch({\n                  type: EDIT_POST,\n                  payload: response.data\n                });\n                history.push('/blog');\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x4) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var deletePost = function deletePost(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return posts.delete(\"/posts/\".concat(id));\n\n              case 2:\n                dispatch({\n                  type: DELETE_POST,\n                  payload: id\n                });\n                history.push('/blog');\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function (_x5) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/jack/Desktop/concomp/front-end/src/actions/index.js"],"names":["posts","history","axios","SIGN_IN","SIGN_OUT","CHANGE_CLASS","CREATE_POST","FETCH_POSTS","EDIT_POST","DELETE_POST","signIn","userId","type","payload","signOut","changeClass","classArray","createPost","formValues","dispatch","getState","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","comments","message","idToBeAdded","post","id","response","data","push","fetchPosts","fetch","then","json","res","editPost","patch","deletePost","delete"],"mappings":"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","sourcesContent":["import posts from '../apis/posts';\nimport history from '../history';\nimport axios from 'axios';\n\nimport { SIGN_IN, SIGN_OUT, CHANGE_CLASS, CREATE_POST, FETCH_POSTS, EDIT_POST, DELETE_POST } from './types';\n\nexport const signIn = (userId) =>{\n  return{\n    type: SIGN_IN,\n    payload: userId\n  };\n};\n\nexport const signOut = () => {\n  return{\n    type: SIGN_OUT\n  };\n};\n\nexport const changeClass = (classArray) => {\n  return{\n    type: CHANGE_CLASS,\n    payload: classArray\n  };\n};\n\nexport const createPost = formValues => async (dispatch, getState) => {\n      var today = new Date();\n      var dd = today.getDate();\n      var mm = today.getMonth() + 1; //January is 0!\n      var yyyy = today.getFullYear();\n      if (dd < 10) {\n        dd = '0' + dd;\n      }\n      if (mm < 10) {\n        mm = '0' + mm;\n      }\n      today = mm + '/' + dd + '/' + yyyy;\n\n      var comments = [];\n\n\n\n      let message = \"hello\";\n      let idToBeAdded = 0;\n\n      const response = await axios.post(\"http://localhost:3001/api/putData\", {\n        id: idToBeAdded,\n        message: message\n      });\n\n      dispatch({type: CREATE_POST, payload: response.data});\n      history.push('/blog');\n};\n\nexport const fetchPosts = () => async dispatch => {\n\n  fetch(\"http://localhost:3001/api/getData\")\n      .then(data => data.json())\n      .then(res => dispatch({type: FETCH_POSTS, payload: res.data}));\n\n}\n\n\nexport const editPost = (id, formValues) => async dispatch => {\n  const response = await posts.patch(`/posts/${id}`, formValues);\n  dispatch({type: EDIT_POST, payload: response.data});\n  history.push('/blog');\n}\n\nexport const deletePost = (id) => async dispatch => {\n  await posts.delete(`/posts/${id}`);\n  dispatch({type: DELETE_POST, payload: id});\n  history.push('/blog');\n}\n"]},"metadata":{},"sourceType":"module"}